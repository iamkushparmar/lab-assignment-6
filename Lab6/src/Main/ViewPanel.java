/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Main;

import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

public class ViewPanel extends javax.swing.JPanel {


   private ArrayList<User> users;
   private User selectedUser;
   
    public ViewPanel() {
        initComponents();
        populateTable();
    }
    
  /*  void setValues(){
        
         // jTextFieldFirstname.setText(user.getFirstname());
         /* firstnamejTextField1.setText(patient.getFirstName());
          lastnamejTextField1.setText(patient.getLastName());
          agejTextField1.setText(Integer.toString(patient.getAge()));
          emailjTextField1.setText(patient.getEmail());
          messagejTextField1.setText(patient.getMessage());*/
         
        //firstnamejLabel1.setText(patient.getFirstName());
       
       // agejLabel1.setText(Integer.toString(patient.getAge()));
       
        
    //}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        NameLabel = new javax.swing.JLabel();
        AgeLabel = new javax.swing.JLabel();
        NameTextField = new javax.swing.JTextField();
        AgeTextField = new javax.swing.JTextField();
        EditButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        SaveButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 204, 255));
        setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        setPreferredSize(new java.awt.Dimension(400, 400));

        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Age"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(UserTable);
        if (UserTable.getColumnModel().getColumnCount() > 0) {
            UserTable.getColumnModel().getColumn(0).setResizable(false);
            UserTable.getColumnModel().getColumn(2).setResizable(false);
        }

        NameLabel.setText("Name");

        AgeLabel.setText("Age");

        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(SaveButton)
                        .addContainerGap(83, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(EditButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addComponent(DeleteButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NameLabel)
                                    .addComponent(AgeLabel))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NameTextField)
                                    .addComponent(AgeTextField))))
                        .addGap(16, 16, 16))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(48, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EditButton)
                            .addComponent(DeleteButton))
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameLabel)
                            .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AgeLabel)
                            .addComponent(AgeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SaveButton)
                        .addGap(66, 66, 66))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = UserTable.getSelectedRow();
        if (selectedIndex == -1){
            JOptionPane.showMessageDialog(this,"Please select a user to edit");
            return;
        }
            selectedUser = users.get(selectedIndex);
            NameTextField.setText(selectedUser.getName());
            AgeTextField.setText(Integer.toString(selectedUser.getAge()));
    }//GEN-LAST:event_EditButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = UserTable.getSelectedRow();
        if (selectedIndex == -1){
            JOptionPane.showMessageDialog(this,"Please select a user to delete");
            return;
        }
        try{
            selectedUser=users.get(selectedIndex);
            DatabaseConnector.deleteUser(selectedUser);
            JOptionPane.showMessageDialog(null,"Deleted Successfully");
            clearFields(); 
            populateTable();
                       
        }catch(Exception e){
         JOptionPane.showMessageDialog(this,e.getMessage());   
        }

    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO User newUser = new User();
        User newUser = new User();
        try{
            newUser.setAge(Integer.parseInt(AgeTextField.getText()));
            newUser.setName(NameTextField.getText());
            DatabaseConnector.editUser(selectedUser, newUser);
            JOptionPane.showMessageDialog(this,"User Edited Successfully");
            clearFields();
            populateTable();            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_SaveButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AgeLabel;
    private javax.swing.JTextField AgeTextField;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameTextField;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTable UserTable;
    private javax.swing.JScrollPane jScrollPane;
    // End of variables declaration//GEN-END:variables
public void populateTable(){
    try{
        this.users= DatabaseConnector.getAllusers();
        DefaultTableModel model=(DefaultTableModel) UserTable.getModel();
        model.setRowCount(0);
        for(User u : users){
            Object[] row=new Object[3];
            row[0]=u.getId();
            row[1]=u.getName();
            row[2]= u.getAge();
            model.addRow(row);
        }
        clearFields();        
    }catch(Exception e){
        JOptionPane.showMessageDialog(this, e.getMessage());
        
    }
}
public void clearFields(){
    NameTextField.setText("");
    AgeTextField.setText("");
}
}
